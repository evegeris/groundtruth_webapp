function tsDebugTask(){var e=gulp.src("src/ts/**/*.ts").pipe(sourcemaps.init()).pipe(gulpTypescript({typescript:typescript,noImplicitAny:!0,target:"es5",out:"ag-grid.js"}));return e.js.pipe(sourcemaps.write()).pipe(rename("ag-grid.js")).pipe(gulp.dest("./docs/dist"))}function tsReleaseTask(){var e=gulp.src("src/ts/**/*.ts").pipe(gulpTypescript({typescript:typescript,noImplicitAny:!0,target:"es5",declarationFiles:!0,out:"ag-grid.js"}));return merge([e.dts.pipe(header(dtsHeaderTemplate,{pkg:pkg})).pipe(gulp.dest("dist")),e.js.pipe(rename("ag-grid.js")).pipe(header(headerTemplate,{pkg:pkg})).pipe(gulp.dest("./dist")).pipe(gulp.dest("./docs/dist")).pipe(buffer()).pipe(uglify()).pipe(rename("ag-grid.min.js")).pipe(gulp.dest("./dist")).pipe(gulp.dest("./docs/dist"))])}function stylusTask(){return gulp.src("./src/styles/*.styl").pipe(foreach(function(e,s){return e.pipe(stylus({use:nib(),compress:!1})).pipe(gulp.dest("./docs/dist/")).pipe(gulp.dest("./dist/"))})),gulp.src("./src/styles/*.styl").pipe(foreach(function(e,s){return e.pipe(stylus({use:nib(),compress:!0})).pipe(rename(function(){var e=path.basename(s.path),p=e.indexOf(".");return e=e.substring(0,p)+".min.css"}())).pipe(gulp.dest("./dist/")).pipe(gulp.dest("./docs/dist/"))}))}function watchTask(){gulp.watch("./src/ts/**/*",["ts-debug"]),gulp.watch("./src/styles/**/*",["stylus"])}var gulp=require("gulp"),path=require("path"),uglify=require("gulp-uglify"),foreach=require("gulp-foreach"),rename=require("gulp-rename"),stylus=require("gulp-stylus"),buffer=require("vinyl-buffer"),nib=require("nib"),gulpTypescript=require("gulp-typescript"),typescript=require("typescript"),sourcemaps=require("gulp-sourcemaps"),header=require("gulp-header"),merge=require("merge2"),pkg=require("./package.json"),tsd=require("gulp-tsd"),headerTemplate=["/**"," * <%= pkg.name %> - <%= pkg.description %>"," * @version v<%= pkg.version %>"," * @link <%= pkg.homepage %>"," * @license <%= pkg.license %>"," */",""].join("\n"),dtsHeaderTemplate="// Type definitions for <%= pkg.name %> v<%= pkg.version %>\n// Project: <%= pkg.homepage %>\n// Definitions by: Niall Crosby <https://github.com/ceolter/>\n// Definitions: https://github.com/borisyankov/DefinitelyTyped\n";gulp.task("default",["stylus","tsd","debug-build","watch"]),gulp.task("release",["stylus","tsd","ts-release"]),gulp.task("debug-build",["stylus","ts-debug"]),gulp.task("stylus",stylusTask),gulp.task("ts-debug",tsDebugTask),gulp.task("ts-release",tsReleaseTask),gulp.task("watch",watchTask),gulp.task("tsd",function(e){tsd({command:"reinstall",config:"./tsd.json"},e)}),gulp.task("es6",function(e){var s=gulp.src("src/es6/**/*.ts").pipe(sourcemaps.init()).pipe(gulpTypescript({typescript:typescript,noImplicitAny:!0,experimentalDecorators:!0,emitDecoratorMetadata:!0,target:"es5",module:"commonjs"}));return s.js.pipe(sourcemaps.write()).pipe(gulp.dest("./docs/dist"))});